// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package testmodule.proxies;

public class NativeAppContext
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject nativeAppContextMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "TestModule.NativeAppContext";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		ScrollToTopTrigger("ScrollToTopTrigger"),
		ScrollToGuid("ScrollToGuid"),
		AnimateScroll("AnimateScroll"),
		NativeAppContext_TestSet("TestModule.NativeAppContext_TestSet"),
		CurrentBlock("TestModule.CurrentBlock"),
		NativeAppContext_Item_ScrollTo("TestModule.NativeAppContext_Item_ScrollTo");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public NativeAppContext(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "TestModule.NativeAppContext"));
	}

	protected NativeAppContext(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject nativeAppContextMendixObject)
	{
		if (nativeAppContextMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("TestModule.NativeAppContext", nativeAppContextMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a TestModule.NativeAppContext");

		this.nativeAppContextMendixObject = nativeAppContextMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'NativeAppContext.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static testmodule.proxies.NativeAppContext initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return testmodule.proxies.NativeAppContext.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static testmodule.proxies.NativeAppContext initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new testmodule.proxies.NativeAppContext(context, mendixObject);
	}

	public static testmodule.proxies.NativeAppContext load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return testmodule.proxies.NativeAppContext.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of ScrollToTopTrigger
	 */
	public final java.util.Date getScrollToTopTrigger()
	{
		return getScrollToTopTrigger(getContext());
	}

	/**
	 * @param context
	 * @return value of ScrollToTopTrigger
	 */
	public final java.util.Date getScrollToTopTrigger(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.ScrollToTopTrigger.toString());
	}

	/**
	 * Set value of ScrollToTopTrigger
	 * @param scrolltotoptrigger
	 */
	public final void setScrollToTopTrigger(java.util.Date scrolltotoptrigger)
	{
		setScrollToTopTrigger(getContext(), scrolltotoptrigger);
	}

	/**
	 * Set value of ScrollToTopTrigger
	 * @param context
	 * @param scrolltotoptrigger
	 */
	public final void setScrollToTopTrigger(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date scrolltotoptrigger)
	{
		getMendixObject().setValue(context, MemberNames.ScrollToTopTrigger.toString(), scrolltotoptrigger);
	}

	/**
	 * @return value of ScrollToGuid
	 */
	public final java.lang.String getScrollToGuid()
	{
		return getScrollToGuid(getContext());
	}

	/**
	 * @param context
	 * @return value of ScrollToGuid
	 */
	public final java.lang.String getScrollToGuid(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ScrollToGuid.toString());
	}

	/**
	 * Set value of ScrollToGuid
	 * @param scrolltoguid
	 */
	public final void setScrollToGuid(java.lang.String scrolltoguid)
	{
		setScrollToGuid(getContext(), scrolltoguid);
	}

	/**
	 * Set value of ScrollToGuid
	 * @param context
	 * @param scrolltoguid
	 */
	public final void setScrollToGuid(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String scrolltoguid)
	{
		getMendixObject().setValue(context, MemberNames.ScrollToGuid.toString(), scrolltoguid);
	}

	/**
	 * @return value of AnimateScroll
	 */
	public final java.lang.Boolean getAnimateScroll()
	{
		return getAnimateScroll(getContext());
	}

	/**
	 * @param context
	 * @return value of AnimateScroll
	 */
	public final java.lang.Boolean getAnimateScroll(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.AnimateScroll.toString());
	}

	/**
	 * Set value of AnimateScroll
	 * @param animatescroll
	 */
	public final void setAnimateScroll(java.lang.Boolean animatescroll)
	{
		setAnimateScroll(getContext(), animatescroll);
	}

	/**
	 * Set value of AnimateScroll
	 * @param context
	 * @param animatescroll
	 */
	public final void setAnimateScroll(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean animatescroll)
	{
		getMendixObject().setValue(context, MemberNames.AnimateScroll.toString(), animatescroll);
	}

	/**
	 * @return value of NativeAppContext_TestSet
	 */
	public final testmodule.proxies.TestSet getNativeAppContext_TestSet() throws com.mendix.core.CoreException
	{
		return getNativeAppContext_TestSet(getContext());
	}

	/**
	 * @param context
	 * @return value of NativeAppContext_TestSet
	 */
	public final testmodule.proxies.TestSet getNativeAppContext_TestSet(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		testmodule.proxies.TestSet result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.NativeAppContext_TestSet.toString());
		if (identifier != null)
			result = testmodule.proxies.TestSet.load(context, identifier);
		return result;
	}

	/**
	 * Set value of NativeAppContext_TestSet
	 * @param nativeappcontext_testset
	 */
	public final void setNativeAppContext_TestSet(testmodule.proxies.TestSet nativeappcontext_testset)
	{
		setNativeAppContext_TestSet(getContext(), nativeappcontext_testset);
	}

	/**
	 * Set value of NativeAppContext_TestSet
	 * @param context
	 * @param nativeappcontext_testset
	 */
	public final void setNativeAppContext_TestSet(com.mendix.systemwideinterfaces.core.IContext context, testmodule.proxies.TestSet nativeappcontext_testset)
	{
		if (nativeappcontext_testset == null)
			getMendixObject().setValue(context, MemberNames.NativeAppContext_TestSet.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.NativeAppContext_TestSet.toString(), nativeappcontext_testset.getMendixObject().getId());
	}

	/**
	 * @return value of CurrentBlock
	 */
	public final testmodule.proxies.Block getCurrentBlock() throws com.mendix.core.CoreException
	{
		return getCurrentBlock(getContext());
	}

	/**
	 * @param context
	 * @return value of CurrentBlock
	 */
	public final testmodule.proxies.Block getCurrentBlock(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		testmodule.proxies.Block result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.CurrentBlock.toString());
		if (identifier != null)
			result = testmodule.proxies.Block.load(context, identifier);
		return result;
	}

	/**
	 * Set value of CurrentBlock
	 * @param currentblock
	 */
	public final void setCurrentBlock(testmodule.proxies.Block currentblock)
	{
		setCurrentBlock(getContext(), currentblock);
	}

	/**
	 * Set value of CurrentBlock
	 * @param context
	 * @param currentblock
	 */
	public final void setCurrentBlock(com.mendix.systemwideinterfaces.core.IContext context, testmodule.proxies.Block currentblock)
	{
		if (currentblock == null)
			getMendixObject().setValue(context, MemberNames.CurrentBlock.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.CurrentBlock.toString(), currentblock.getMendixObject().getId());
	}

	/**
	 * @return value of NativeAppContext_Item_ScrollTo
	 */
	public final testmodule.proxies.Item getNativeAppContext_Item_ScrollTo() throws com.mendix.core.CoreException
	{
		return getNativeAppContext_Item_ScrollTo(getContext());
	}

	/**
	 * @param context
	 * @return value of NativeAppContext_Item_ScrollTo
	 */
	public final testmodule.proxies.Item getNativeAppContext_Item_ScrollTo(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		testmodule.proxies.Item result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.NativeAppContext_Item_ScrollTo.toString());
		if (identifier != null)
			result = testmodule.proxies.Item.load(context, identifier);
		return result;
	}

	/**
	 * Set value of NativeAppContext_Item_ScrollTo
	 * @param nativeappcontext_item_scrollto
	 */
	public final void setNativeAppContext_Item_ScrollTo(testmodule.proxies.Item nativeappcontext_item_scrollto)
	{
		setNativeAppContext_Item_ScrollTo(getContext(), nativeappcontext_item_scrollto);
	}

	/**
	 * Set value of NativeAppContext_Item_ScrollTo
	 * @param context
	 * @param nativeappcontext_item_scrollto
	 */
	public final void setNativeAppContext_Item_ScrollTo(com.mendix.systemwideinterfaces.core.IContext context, testmodule.proxies.Item nativeappcontext_item_scrollto)
	{
		if (nativeappcontext_item_scrollto == null)
			getMendixObject().setValue(context, MemberNames.NativeAppContext_Item_ScrollTo.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.NativeAppContext_Item_ScrollTo.toString(), nativeappcontext_item_scrollto.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return nativeAppContextMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final testmodule.proxies.NativeAppContext that = (testmodule.proxies.NativeAppContext) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "TestModule.NativeAppContext";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
